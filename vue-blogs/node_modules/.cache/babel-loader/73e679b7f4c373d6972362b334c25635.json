{"remainingRequest":"E:\\VScode-workplace\\我的博客\\shaohang-blog\\my-blogs\\node_modules\\babel-loader\\lib\\index.js!E:\\VScode-workplace\\我的博客\\shaohang-blog\\my-blogs\\src\\utils\\request.js","dependencies":[{"path":"E:\\VScode-workplace\\我的博客\\shaohang-blog\\my-blogs\\src\\utils\\request.js","mtime":1666071398521},{"path":"E:\\VScode-workplace\\我的博客\\shaohang-blog\\my-blogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1669963799101},{"path":"E:\\VScode-workplace\\我的博客\\shaohang-blog\\my-blogs\\node_modules\\babel-loader\\lib\\index.js","mtime":1669963799734}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXIvaW5kZXgnOwppbXBvcnQgeyBNZXNzYWdlQm94LCBNZXNzYWdlIH0gZnJvbSAnZWxlbWVudC11aSc7IC8vIGNyZWF0ZSBhbiBheGlvcyBpbnN0YW5jZQoKdmFyIHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICJodHRwOi8vbG9jYWxob3N0OjgwODAvIiwKICB0aW1lb3V0OiA1MDAwIC8vIHJlcXVlc3QgdGltZW91dAoKfSk7IC8vIHJlcXVlc3QgaW50ZXJjZXB0b3IKCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oInRva2VuIikpIHsKICAgIGNvbmZpZy5oZWFkZXJzWyd0b2tlbiddID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInRva2VuIik7CiAgfSAvLyBkbyBzb21ldGhpbmcgYmVmb3JlIHJlcXVlc3QgaXMgc2VudAogIC8vIGlmIChzdG9yZS5nZXR0ZXJzLnRva2VuKSB7CiAgLy8gICAgIGNvbmZpZy5oZWFkZXJzWydYLVRva2VuJ10gPSBnZXRUb2tlbigpCiAgLy8gfQoKCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gZG8gc29tZXRoaW5nIHdpdGggcmVxdWVzdCBlcnJvcgogIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKAovKioKICogSWYgeW91IHdhbnQgdG8gZ2V0IGh0dHAgaW5mb3JtYXRpb24gc3VjaCBhcyBoZWFkZXJzIG9yIHN0YXR1cwogKiBQbGVhc2UgcmV0dXJuICByZXNwb25zZSA9PiByZXNwb25zZQogKi8KCi8qKgogKiBEZXRlcm1pbmUgdGhlIHJlcXVlc3Qgc3RhdHVzIGJ5IGN1c3RvbSBjb2RlCiAqIEhlcmUgaXMganVzdCBhbiBleGFtcGxlCiAqIFlvdSBjYW4gYWxzbyBqdWRnZSB0aGUgc3RhdHVzIGJ5IEhUVFAgU3RhdHVzIENvZGUKICovCmZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZS5kYXRhOwogIGNvbnNvbGUubG9nKHJlcy5zdGF0dXMpOwoKICBpZiAocmVzLnN0YXR1cyA9PSA0MDAxKSB7CiAgICBjb25zb2xlLmxvZygnNDAwMSDmi6bmiKonKTsKICAgIE1lc3NhZ2UoewogICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICB0eXBlOiAnZXJyb3InLAogICAgICBkdXJhdGlvbjogNSAqIDEwMDAKICAgIH0pOwogICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oInRva2VuIik7CiAgICBzdG9yZS5jb21taXQoInNldElzTG9naW4iLCBmYWxzZSk7CiAgICByb3V0ZXIucHVzaCh7CiAgICAgIG5hbWU6ICJsb2dpbiIKICAgIH0pOwogICAgTWVzc2FnZSh7CiAgICAgIG1lc3NhZ2U6IHJlcy5tc2csCiAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgIGR1cmF0aW9uOiA1ICogMTAwMAogICAgfSk7CiAgfSBlbHNlIGlmIChyZXMuc3RhdHVzICE9PSAyMDApIHsKICAgIE1lc3NhZ2UoewogICAgICBtZXNzYWdlOiByZXMubXNnLAogICAgICB0eXBlOiAnZXJyb3InLAogICAgICBkdXJhdGlvbjogNSAqIDEwMDAKICAgIH0pOwogIH0gZWxzZSB7CiAgICByZXR1cm4gcmVzOwogIH0KfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgY29uc29sZS5sb2coJ2VycicgKyBlcnJvcik7IC8vIGZvciBkZWJ1ZwoKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKZXhwb3J0IGRlZmF1bHQgc2VydmljZTs="},{"version":3,"sources":["E:/VScode-workplace/我的博客/shaohang-blog/my-blogs/src/utils/request.js"],"names":["axios","store","router","MessageBox","Message","service","create","baseURL","timeout","interceptors","request","use","config","localStorage","getItem","headers","error","console","log","Promise","reject","response","res","data","status","message","msg","type","duration","removeItem","commit","push","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,YAApC,C,CACA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAE,wBADgB;AAEzBC,EAAAA,OAAO,EAAE,IAFgB,CAEX;;AAFW,CAAb,CAAhB,C,CAKA;;AACAH,OAAO,CAACI,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAI;AACN,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/BF,IAAAA,MAAM,CAACG,OAAP,CAAe,OAAf,IAA0BF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA1B;AACH,GAHK,CAIN;AAEA;AACA;AACA;;;AACA,SAAOF,MAAP;AACH,CAXL,EAYI,UAAAI,KAAK,EAAI;AACL;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFK,CAEc;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CAhBL,E,CAmBA;;AACAX,OAAO,CAACI,YAAR,CAAqBY,QAArB,CAA8BV,GAA9B;AACI;;;;;AAKA;;;;;AAKA,UAAAU,QAAQ,EAAI;AACR,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACE,MAAhB;;AACA,MAAIF,GAAG,CAACE,MAAJ,IAAc,IAAlB,EAAwB;AAEpBP,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAd,IAAAA,OAAO,CAAC;AACJqB,MAAAA,OAAO,EAAEH,GAAG,CAACI,GADT;AAEJC,MAAAA,IAAI,EAAE,OAFF;AAGJC,MAAAA,QAAQ,EAAE,IAAI;AAHV,KAAD,CAAP;AAKAf,IAAAA,YAAY,CAACgB,UAAb,CAAwB,OAAxB;AACA5B,IAAAA,KAAK,CAAC6B,MAAN,CAAa,YAAb,EAA0B,KAA1B;AACA5B,IAAAA,MAAM,CAAC6B,IAAP,CAAY;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAZ;AAEA5B,IAAAA,OAAO,CAAC;AACJqB,MAAAA,OAAO,EAAEH,GAAG,CAACI,GADT;AAEJC,MAAAA,IAAI,EAAE,OAFF;AAGJC,MAAAA,QAAQ,EAAE,IAAI;AAHV,KAAD,CAAP;AAKH,GAjBD,MAiBO,IAAIN,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AAC3BpB,IAAAA,OAAO,CAAC;AACJqB,MAAAA,OAAO,EAAEH,GAAG,CAACI,GADT;AAEJC,MAAAA,IAAI,EAAE,OAFF;AAGJC,MAAAA,QAAQ,EAAE,IAAI;AAHV,KAAD,CAAP;AAMH,GAPM,MAOA;AACH,WAAON,GAAP;AACH;AACJ,CAzCL,EA0CI,UAAAN,KAAK,EAAI;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EADK,CACsB;;AAC3B,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH,CA7CL;AAgDA,eAAeX,OAAf","sourcesContent":["import axios from 'axios'\nimport store from '@/store'\n\nimport router from '../router/index'\nimport { MessageBox, Message } from 'element-ui'\n// create an axios instance\nconst service = axios.create({\n    baseURL: \"http://localhost:8080/\",\n    timeout: 5000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n    config => {\n        if (localStorage.getItem(\"token\")) {\n            config.headers['token'] = localStorage.getItem(\"token\")\n        }\n        // do something before request is sent\n\n        // if (store.getters.token) {\n        //     config.headers['X-Token'] = getToken()\n        // }\n        return config\n    },\n    error => {\n        // do something with request error\n        console.log(error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n    /**\n     * If you want to get http information such as headers or status\n     * Please return  response => response\n     */\n\n    /**\n     * Determine the request status by custom code\n     * Here is just an example\n     * You can also judge the status by HTTP Status Code\n     */\n    response => {\n        const res = response.data\n        console.log(res.status);\n        if (res.status == 4001) {\n\n            console.log('4001 拦截');\n            Message({\n                message: res.msg,\n                type: 'error',\n                duration: 5 * 1000\n            })\n            localStorage.removeItem(\"token\")\n            store.commit(\"setIsLogin\",false)\n            router.push({ name: \"login\" })\n\n            Message({\n                message: res.msg,\n                type: 'error',\n                duration: 5 * 1000\n            })\n        } else if (res.status !== 200) {\n            Message({\n                message: res.msg,\n                type: 'error',\n                duration: 5 * 1000\n            })\n\n        } else {\n            return res\n        }\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\nexport default service\n"]}]}